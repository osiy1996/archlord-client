#ifndef _AGSP_EVENTSYSTEM_H
#define _AGSP_EVENTSYSTEM_H

#include "AgsdRelay2.h"
#include "AgsmEventSystem.h"

struct PACKET_AGSMEVENTSYSTEM_RELAY : public PACKET_HEADER
{
	CHAR	FlagLow;

	INT16	nParam;

	PACKET_AGSMEVENTSYSTEM_RELAY()
		: nParam(0), FlagLow(1)
	{
		cType			= AGSMRELAY_PACKET_TYPE;
		unPacketLength	= (UINT16)sizeof(PACKET_AGSMEVENTSYSTEM_RELAY);
	}
};

//////////////////////////////////////////////////////////////////////////
// 출석 체크 이벤트 - arycoat 2009.2.
enum eAttendanceRelayType
{
	AGSMRELAY_PARAM_ATTENDANCE_REQUEST = 1,
	AGSMRELAY_PARAM_ATTENDANCE_RESULT,
};

struct PACKET_AGSMCHARACTER_RELAY_ATTENDANCE : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_AGSMCHARACTER_RELAY_ATTENDANCE()
	{
		nParam			= AGSMRELAY_PARAM_ATTENDANCE;
		unPacketLength	= (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_ATTENDANCE);
	}
};

struct PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_REQUEST : public PACKET_AGSMCHARACTER_RELAY_ATTENDANCE
{
	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	CHAR strAccountName[AGPACHARACTER_MAX_ID_STRING+1];
	CHAR strWorldName[AGSM_MAX_SERVER_NAME+1];

	INT32 CID, NID, EID, STEP, Type;

	PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_REQUEST(CHAR* AccountName, CHAR* CharName, CHAR* WorldName)
	{
		nOperation = AGSMRELAY_PARAM_ATTENDANCE_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_REQUEST);

		memset(strAccountName, 0, sizeof(strAccountName));
		strcpy(strAccountName, AccountName);

		memset(strCharName, 0, sizeof(strCharName));
		strcpy(strCharName, CharName);

		memset(strWorldName, 0, sizeof(strWorldName));
		strcpy(strWorldName, WorldName);

		CID = 0;
		NID = 0;
		EID = 0;
		STEP = 0;
		Type = 0;
	}
};

struct PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_RESULT : public PACKET_AGSMCHARACTER_RELAY_ATTENDANCE
{
	INT32 CID, NID, EID, STEP, Type;
	INT32 nResult;

	PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_RESULT()
	{
		nOperation = AGSMRELAY_PARAM_ATTENDANCE_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_ATTENDANCE_RESULT);

		CID = 0;
		NID = 0;
		EID = 0;
		STEP = 0;
		Type = 0;

		nResult = -1;
	}
};

//////////////////////////////////////////////////////////////////////////
// 아이템 부여 이벤트 absenty 2009. 03. 11
enum eEventItemeRelayType
{
	AGSMRELAY_PARAM_EVENT_USER_REQUEST = 1,
	AGSMRELAY_PARAM_EVENT_USER_RESULT,
	AGSMRELAY_PARAM_EVENT_USER_FLAG_UPDATE,
};

struct PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM()
	{
		nParam			= AGSMRELAY_PARAM_EVENT_ITEM;
		unPacketLength	= (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM);
	}
};

struct PACKET_AGSMCHARACTER_RELAY_EVENT_USER_REQUEST : public PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM
{
	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	CHAR strAccountName[AGPACHARACTER_MAX_ID_STRING+1];
	CHAR strWorldName[AGSM_MAX_SERVER_NAME+1];

	INT32 CID, NID, EID, STEP, Type;

	PACKET_AGSMCHARACTER_RELAY_EVENT_USER_REQUEST(CHAR* AccountName, CHAR* CharName, CHAR* WorldName)
	{
		nOperation = AGSMRELAY_PARAM_EVENT_USER_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_EVENT_USER_REQUEST);

		memset(strAccountName, 0, sizeof(strAccountName));
		strcpy(strAccountName, AccountName);

		memset(strCharName, 0, sizeof(strCharName));
		strcpy(strCharName, CharName);

		memset(strWorldName, 0, sizeof(strWorldName));
		strcpy(strWorldName, WorldName);

		CID = 0;
		NID = 0;
		EID = 0;
		STEP = 0;
		Type = 0;
	}
};

struct PACKET_AGSMCHARACTER_RELAY_EVENT_USER_RESULT : public PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM
{
	INT32 CID, NID, EID, STEP, Type;
	INT32 nResult;

	PACKET_AGSMCHARACTER_RELAY_EVENT_USER_RESULT()
	{
		nOperation = AGSMRELAY_PARAM_EVENT_USER_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_EVENT_USER_RESULT);

		CID = 0;
		NID = 0;
		EID = 0;
		STEP = 0;
		Type = 0;

		nResult = -1;
	}
};


struct PACKET_AGSMCHARACTER_RELAY_EVENT_USER_FLAG_UPDATE : public PACKET_AGSMCHARACTER_RELAY_EVENT_ITEM
{
	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	CHAR strAccountName[AGPACHARACTER_MAX_ID_STRING+1];
	CHAR strWorldName[AGSM_MAX_SERVER_NAME+1];

	INT32 CID, NID, EID, STEP, Type, Flag;

	PACKET_AGSMCHARACTER_RELAY_EVENT_USER_FLAG_UPDATE(CHAR* AccountName, CHAR* CharName, CHAR* WorldName)
	{
		nOperation = AGSMRELAY_PARAM_EVENT_USER_FLAG_UPDATE;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_EVENT_USER_FLAG_UPDATE);

		memset(strAccountName, 0, sizeof(strAccountName));
		strcpy(strAccountName, AccountName);

		memset(strCharName, 0, sizeof(strCharName));
		strcpy(strCharName, CharName);

		memset(strWorldName, 0, sizeof(strWorldName));
		strcpy(strWorldName, WorldName);

		CID = 0;
		NID = 0;
		EID = 0;
		STEP = 0;
		Type = 0;
		Flag = 0;
	}
};

//////////////////////////////////////////////////////////////////////////
// 캐릭명 변경 시스템 - arycoat 2009.4.
enum eChangeNameRelayType
{
	AGSMRELAY_PARAM_CHANGENAME_REQUEST = 1,
	AGSMRELAY_PARAM_CHANGENAME_RESULT,
};

struct PACKET_AGSMCHARACTER_RELAY_CHANGENAME : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_AGSMCHARACTER_RELAY_CHANGENAME()
	{
		nParam			= AGSMRELAY_PARAM_CHANGENAME;
		unPacketLength	= (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_CHANGENAME);
	}
};

struct PACKET_AGSMCHARACTER_RELAY_CHANGENAME_REQUEST : public PACKET_AGSMCHARACTER_RELAY_CHANGENAME
{
	CHAR strOldName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	CHAR strNewName[AGPDCHARACTER_MAX_ID_LENGTH+1];

	INT32 CID, NID, EID, STEP;

	PACKET_AGSMCHARACTER_RELAY_CHANGENAME_REQUEST(CHAR* _OldName, CHAR* _NewName)
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CHANGENAME_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_CHANGENAME_REQUEST);

		memset(strOldName, 0, sizeof(strOldName));
		strcpy(strOldName, _OldName);

		memset(strNewName, 0, sizeof(strNewName));
		strcpy(strNewName, _NewName);
	}
};

struct PACKET_AGSMCHARACTER_RELAY_CHANGENAME_RESULT : public PACKET_AGSMCHARACTER_RELAY_CHANGENAME
{
	INT32 CID, NID, EID, STEP;
	INT32 nResult;

	PACKET_AGSMCHARACTER_RELAY_CHANGENAME_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CHANGENAME_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_CHANGENAME_RESULT);

		nResult = -1;
	}
};

//////////////////////////////////////////////////////////////////////////
// 캐릭터 봉인 시스템 - arycoat 2009.4.
enum eCerariumOrbRelayType
{
	AGSMRELAY_PARAM_CERARIUMORB_LIST_REQUEST = 1,
	AGSMRELAY_PARAM_CERARIUMORB_LIST_RESULT,
	AGSMRELAY_PARAM_CERARIUMORB_CHARACTERNAME_REQUEST,
	AGSMRELAY_PARAM_CERARIUMORB_CHARACTERNAME_RESULT,
	AGSMRELAY_PARAM_CERARIUMORB_SEALING,
	AGSMRELAY_PARAM_CERARIUMORB_SEALING_RESULT,
	AGSMRELAY_PARAM_CERARIUMORB_SEALING_DATA_REQUEST,
	AGSMRELAY_PARAM_CERARIUMORB_SEALING_DATA_RESULT,
	AGSMRELAY_PARAM_CERARIUMORB_SEALING_ALL_DATA_REQUEST,
	AGSMRELAY_PARAM_CERARIUMORB_RELEASE_SEAL_REQUEST,
	AGSMRELAY_PARAM_CERARIUMORB_RELEASE_SEAL_RESULT,
};

struct PACKET_RELAY_CERARIUMORB : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_RELAY_CERARIUMORB()
	{
		nParam			= AGSMRELAY_PARAM_CERARIUMORB;
		unPacketLength	= (UINT16)sizeof(PACKET_RELAY_CERARIUMORB);
	}
};

struct PACKET_RELAY_CERARIUMORB_LIST_REQUEST : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	CHAR strAccountName[AGPACHARACTER_MAX_ID_STRING+1];
	CHAR strWorldName[AGSM_MAX_SERVER_NAME+1];

	PACKET_RELAY_CERARIUMORB_LIST_REQUEST()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_LIST_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_LIST_REQUEST);

		memset(strAccountName, 0, sizeof(strAccountName));
		memset(strWorldName, 0, sizeof(strWorldName));
	}
};

struct PACKET_RELAY_CERARIUMORB_LIST_RESULT : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;
	CHAR strCharName[AGSMACCOUNT_MAX_ACCOUNT_CHARACTER][AGPDCHARACTER_MAX_ID_LENGTH+1];
	INT32 lSlot[AGSMACCOUNT_MAX_ACCOUNT_CHARACTER];

	PACKET_RELAY_CERARIUMORB_LIST_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_LIST_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_LIST_RESULT);

		memset(strCharName, 0, sizeof(strCharName));
		memset(lSlot, 0, sizeof(lSlot));
	}
};

struct PACKET_RELAY_CERARIUMORB_CHARACTERNAME_REQUEST : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	CHAR strAccountName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	CHAR strWorldName[AGSM_MAX_SERVER_NAME+1];
	INT32 Slot;

	PACKET_RELAY_CERARIUMORB_CHARACTERNAME_REQUEST()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_CHARACTERNAME_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_CHARACTERNAME_REQUEST);

		memset(strAccountName, 0, sizeof(strAccountName));
		memset(strWorldName, 0, sizeof(strWorldName));
		Slot = 0;
	}
};

struct PACKET_RELAY_CERARIUMORB_CHARACTERNAME_RESULT : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;
	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];

	PACKET_RELAY_CERARIUMORB_CHARACTERNAME_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_CHARACTERNAME_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_CHARACTERNAME_RESULT);

		memset(strCharName, 0, sizeof(strCharName));
	}
};


struct PACKET_RELAY_CERARIUMORB_SEALING : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	INT32 ItemID;
	UINT64 ullDBIID;

	PACKET_RELAY_CERARIUMORB_SEALING()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_SEALING;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_SEALING);

		memset(strCharName, 0, sizeof(strCharName));
		ItemID = 0;
		ullDBIID = 0;
	}
};

struct PACKET_RELAY_CERARIUMORB_SEALING_RESULT : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	INT32 ItemID;
	UINT64 ullDBIID;
	INT32 nResult;

	PACKET_RELAY_CERARIUMORB_SEALING_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_SEALING_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_SEALING_RESULT);

		ItemID = 0;
		ullDBIID = 0;
		nResult = 0;
	}
};

struct PACKET_RELAY_CERARIUMORB_SEALING_DATA_REQUEST : PACKET_RELAY_CERARIUMORB
{
	INT32 ItemID;
	UINT64 ullDBIID;

	PACKET_RELAY_CERARIUMORB_SEALING_DATA_REQUEST()
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_SEALING_DATA_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_SEALING_DATA_REQUEST);

		ItemID = 0;
		ullDBIID = 0;
	}
};

struct PACKET_RELAY_CERARIUMORB_SEALING_ALL_DATA_REQUEST : PACKET_RELAY_CERARIUMORB
{
	PACKET_RELAY_CERARIUMORB_SEALING_ALL_DATA_REQUEST()
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_SEALING_ALL_DATA_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_SEALING_ALL_DATA_REQUEST);
	}
};

struct PACKET_RELAY_CERARIUMORB_SEALING_DATA_RESULT : PACKET_RELAY_CERARIUMORB
{
	INT32 ItemID;
	AgsdSealData SealData;

	PACKET_RELAY_CERARIUMORB_SEALING_DATA_RESULT()
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_SEALING_DATA_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_SEALING_DATA_RESULT);

		ItemID = 0;
		memset(&SealData, 0, sizeof(AgsdSealData));
	}
};

struct PACKET_RELAY_CERARIUMORB_RELEASE_SEAL_REQUEST : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	INT32 ItemID;
	UINT64 ullDBIID;

	PACKET_RELAY_CERARIUMORB_RELEASE_SEAL_REQUEST()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_RELEASE_SEAL_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_RELEASE_SEAL_REQUEST);

		memset(strCharName, 0, sizeof(strCharName));
		ItemID = 0;
		ullDBIID = 0;
	}
};

struct PACKET_RELAY_CERARIUMORB_RELEASE_SEALING_RESULT : PACKET_RELAY_CERARIUMORB
{
	INT32 CID, NID, EID, STEP;

	INT32 ItemID;
	UINT64 ullDBIID;
	INT32 nResult;

	PACKET_RELAY_CERARIUMORB_RELEASE_SEALING_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CERARIUMORB_RELEASE_SEAL_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CERARIUMORB_RELEASE_SEALING_RESULT);

		ItemID = 0;
		ullDBIID = 0;
		nResult = 0;
	}
};


////////////////////////////////////////////////////////////////////////////////////////
// 캐릭터 생성시간 체크 2010. 3 박경도
enum eCharacterCreationDateCheck
{
	AGSMRELAY_PARAM_CHARACTER_CREATION_DATE_CHECK = 1,
	AGSMRELAY_PARAM_CHARACTER_CREATION_DATE_CHECK_RESULT,
};

struct PACKET_RELAY_CHARACTER_CREATION_DATE : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_RELAY_CHARACTER_CREATION_DATE()
	{
		nParam			= AGSMRELAY_PARAM_CHARACTER_CREATION_DATE;
		unPacketLength	= (UINT16)sizeof(PACKET_RELAY_CHARACTER_CREATION_DATE);
	}
};

struct PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK : public PACKET_RELAY_CHARACTER_CREATION_DATE
{
	INT32 CID, NID, EID, STEP;

	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];
	char strStartDate[_MAX_DATETIME_LENGTH+1];
	char strEndDate[_MAX_DATETIME_LENGTH+1];
	PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK() : CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CHARACTER_CREATION_DATE_CHECK;

		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK);

		memset(strCharName, 0, sizeof(strCharName));
		memset(strStartDate, 0, sizeof(strStartDate));
		memset(strEndDate, 0, sizeof(strEndDate));
	}
};

struct PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK_RESULT : public PACKET_RELAY_CHARACTER_CREATION_DATE
{
	INT32 CID, NID, EID, STEP;
	INT32 nResult;

	PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK_RESULT() : nResult(0), CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_CHARACTER_CREATION_DATE_CHECK_RESULT;

		unPacketLength = (UINT16)sizeof(PACKET_RELAY_CHARACTER_CREATION_DATE_CHECK_RESULT);
	}
};

//////////////////////////////////////////////////////////////////////////
// 특성화 서버 이동 시스템 - JK_특성화서버
enum eServerMoveRelayType
{
	AGSMRELAY_PARAM_SERVERMOVE_REQUEST = 1,
	AGSMRELAY_PARAM_SERVERMOVE_RESULT,
};

struct PACKET_AGSMCHARACTER_RELAY_SERVERMOVE : public PACKET_AGSMEVENTSYSTEM_RELAY
{
	INT16 nOperation;

	PACKET_AGSMCHARACTER_RELAY_SERVERMOVE()
	{
		nParam			= AGSMRELAY_PARAM_SERVERMOVE;
		unPacketLength	= (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_SERVERMOVE);
	}
};

struct PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_REQUEST : public PACKET_AGSMCHARACTER_RELAY_SERVERMOVE
{
	INT32 CID, NID, EID, STEP;
	INT32 nServerIndex;
	CHAR strServerGroupName[AGSM_MAX_SERVER_NAME+1];
	CHAR strCharName[AGPDCHARACTER_MAX_ID_LENGTH+1];

	PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_REQUEST()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_SERVERMOVE_REQUEST;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_REQUEST);

		nServerIndex = 0;
		memset(strCharName, 0, sizeof(strCharName));
		memset(strServerGroupName, 0, sizeof(strServerGroupName));

	}
};

struct PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_RESULT : public PACKET_AGSMCHARACTER_RELAY_SERVERMOVE
{
	INT32 CID, NID, EID, STEP;
	INT32 nResult;

	PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_RESULT()
		: CID(0), NID(0), EID(0), STEP(0)
	{
		nOperation = AGSMRELAY_PARAM_SERVERMOVE_RESULT;
		unPacketLength = (UINT16)sizeof(PACKET_AGSMCHARACTER_RELAY_SERVERMOVE_RESULT);

		nResult = -1;
	}
};

#endif //_AGSP_CHARACTER